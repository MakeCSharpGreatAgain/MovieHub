@model MovieHub.ViewModels.Movie.MovieViewModel
@{
    ViewBag.Title = "Add";
}

@Styles.Render("~/Content/addMovie.css")


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <h1 class="title text-center">Add a new movie:</h1>

    <div class="row">
        @if (ViewBag.Message != null)
        {
            <div class="alert alert-danger" style="padding: 10px">@ViewBag.Message</div>
        }
    </div>

    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control input-lg", @placeholder = "Title" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Released, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Released, new { htmlAttributes = new { @class = "form-control input-lg", @placeholder = "Release date (Format: yyyy/MM/dd)" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Rated, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Rated, new { htmlAttributes = new { @class = "form-control input-lg", @placeholder = "Rated" } })
                @Html.ValidationMessageFor(model => model.Rated, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Runtime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Runtime, new { htmlAttributes = new { @class = "form-control input-lg", @placeholder = "Runtime", @type= "number" } })
                @Html.ValidationMessageFor(model => model.Runtime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DirectorName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DirectorName, new { htmlAttributes = new { @class = "form-control input-lg", @placeholder = "Director" } })
                @Html.ValidationMessageFor(model => model.DirectorName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Plot, new { @class = "control-label col-md-2" })
            <div class="col-sm-10">
                @Html.TextAreaFor(model => model.Plot, new { @class = "form-control", @rows = "7" })
                @Html.ValidationMessageFor(model => model.Plot, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Languages, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Languages, new { htmlAttributes = new { @class = "form-control input-lg", @placeholder = "Languages, comma separated (e.g. English, Russian)" } })
                @Html.ValidationMessageFor(model => model.Languages, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Poster, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Poster, new { htmlAttributes = new { @class = "form-control input-lg", @placeholder = "URL of Poster" } })
                @Html.ValidationMessageFor(model => model.Poster, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Genres, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Genres, new { htmlAttributes = new { @class = "form-control input-lg", @placeholder = "Genres, comma separated (e.g. Action, Drama)" } })
                @Html.ValidationMessageFor(model => model.Genres, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ImdbRating, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ImdbRating, new { htmlAttributes = new { @class = "form-control input-lg", @placeholder = "IMDb score" } })
                @Html.ValidationMessageFor(model => model.ImdbRating, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Production, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Production, new { htmlAttributes = new { @class = "form-control input-lg", @placeholder = "Production Name" } })
                @Html.ValidationMessageFor(model => model.Production, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ActorNames, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ActorNames, new { htmlAttributes = new { @class = "form-control input-lg", @placeholder = "Actor names, comma separated" } })
                @Html.ValidationMessageFor(model => model.Languages, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Awards, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Awards, new { htmlAttributes = new { @class = "form-control input-lg", @placeholder = "Awards" } })
                @Html.ValidationMessageFor(model => model.Awards, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-6">
                @*@Html.ActionLink("Cancel")*@
                <input type="submit" value="Create" class="btn btn-success" />
            </div>
        </div>
        

    </div>
}

